#include <WiFi.h>
#include <PubSubClient.h>
#include "DHTesp.h"

const char* ssid = "Wokwi-GUEST";
const char* password = "";
//***Set server***
const char* mqttServer = "broker.mqtt-dashboard.com"; 
WiFiClient espClient;
PubSubClient client(espClient);

//Init val
int port = 1883;
int trigPin = 15;
int echoPin = 2;
int distanceToAlarm=100;
DHTesp dhtSensor;

void wifiConnect() {
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println(" Connected!");
}

void mqttReconnect() {
  while(!client.connected()) {
    Serial.println("Attemping MQTT connection...");
    //***Change "123456789" by your student id***
    if(client.connect("20127542")) {
      Serial.println("connected");

      //***Subscribe all topic you need***
      client.subscribe("20127542/text");
    }
    else {
      Serial.println("try again in 5 seconds");
      delay(5000);
    }
  }
}

void setup() {
  dhtSensor.setup(23, DHTesp::DHT22);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  Serial.begin(9600);
  Serial.print("Connecting to WiFi");

  wifiConnect();
  client.setServer(mqttServer, port);
  client.setCallback(callback);
}

//MQTT Receiver
void callback(char* topic, byte* message, unsigned int length) {
  //Serial.println(topic);
  String strMsg;
  for(int i=0; i<length; i++) {
    strMsg += (char)message[i];
  }
  //Serial.println(strMsg);
  //***Insert code here to control other devices***
  if(strMsg=="ON"){

  }else if(strMsg=="OFF"){

  }else{
    distanceToAlarm = strMsg.toInt();
    Serial.print("Changed distance to: ");
    Serial.println(distanceToAlarm);
  }
  
}

long getDistance(){
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  long duration = pulseIn(echoPin, HIGH);
  long distanceCm=duration*0.034/2;
  return distanceCm;
}

void loop() {
  //Connect to wifi
  if(!client.connected()) {
    mqttReconnect();
  }
  client.loop();

  //Get distance and send to node red
  long distanceR=getDistance();
  char dist[50];
  char temp[50];
  char humi[50];
  char allData[100];

  sprintf(dist, "%d",distanceR);
  client.publish("20127542/disN", dist);
  Serial.println("Distance: " + String(distanceR));
  if(distanceR<distanceToAlarm){
    Serial.println("Trom kia !!!!!");
  }

  //Send Temperature and Humidity
  TempAndHumidity data = dhtSensor.getTempAndHumidity();
  Serial.println("Temperature: " + String(data.temperature, 2) + "â„ƒ");
  sprintf(temp, "%.2f",data.temperature);
  client.publish("20127542/temp", temp);

  Serial.println("Humidity: " + String(data.humidity, 1) + "%");
  sprintf(humi, "%.2f",data.humidity);
  client.publish("20127542/humi", humi);

  strcpy(allData, dist);
  strcat(allData, ", ");
  strcat(allData, temp);
  strcat(allData, ", ");
  strcat(allData, humi);
  Serial.println(allData);
  client.publish("20127542/allData", allData);

  Serial.println("---");


  delay(1000);
  
}


